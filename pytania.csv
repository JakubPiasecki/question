ID,Pytanie,Odpowiedź
1,"Co to jest polimorfizm i jakie są jego zalety?""","Polimorfizm to zdolność obiektów różnych klas do odpowiedzi na te same wiadomości (metody) w sposób specyficzny dla danej klasy. Zalety polimorfizmu obejmują elastyczność kodu, łatwość rozbudowy i utrzymania, oraz abstrakcję."
2,Jakie są różnice między interfejsami a klasami abstrakcyjnymi w Javie?,"Interfejsy są całkowicie abstrakcyjne i mogą zawierać tylko deklaracje metod (przed Javą 8) i stałe. Od Javy 8, interfejsy mogą również zawierać metody domyślne i statyczne. Klasy abstrakcyjne mogą zawierać zarówno metody abstrakcyjne, jak i konkretne, oraz zmienne. Interfejsy są implementowane przez klasy, podczas gdy klasy abstrakcyjne są rozszerzane."
3,Co to jest Dependency Injection (wstrzykiwanie zależności) i jakie są jego zalety?,"Wstrzykiwanie zależności to technika projektowania, która pozwala na przekazywanie zależności obiektów z zewnątrz, zamiast tworzyć je wewnątrz obiektu. Zalety wstrzykiwania zależności obejmują modularność, łatwość testowania, odseparowanie odpowiedzialności i lepsze zarządzanie zasobami."
4,Jakie są różnice między ArrayList a LinkedList w Java Collections Framework?,"ArrayList to dynamiczna tablica, która zapewnia szybki dostęp do elementów (O(1)), ale wolniejsze operacje dodawania/usuwania na początku i środku listy (O(n)). LinkedList to lista dwukierunkowa, która ma wolniejszy dostęp do elementów (O(n)), ale szybsze operacje dodawania/ usuwania na początku, środku i końcu listy (O(1)). ArrayList jest preferowany, gdy potrzebny jest częsty dostęp do elementów, podczas gdy LinkedList jest preferowany, gdy operacje dodawania/ usuwania są ważniejsze."
5,Jakie są różnice między RESTful a SOAP Web Services?,"ściśle określony i może obsługiwać transakcje oraz operacje związane z niezawodnością. RESTful jest zwykle preferowany ze względu na jego prostotę i wydajność, podczas gdy SOAP może być stosowany w bardziej złożonych i formalnych scenariuszach."
6,Jak obsłużyć wyjątek w Javie?,"Wyjątki w Javie można obsłużyć, używając bloków try-catch-finally. Blok try zawiera kod, który może generować wyjątek, blok catch przechwytuje wyjątek i wykonuje odpowiedni kod obsługi błędu, a blok finally zawiera kod, który zostanie wykonany niezależnie od tego, czy wyjątek został zgłoszony, czy nie."
7,Jak zaimplementować wielowątkowość w Javie?,"W Javie wielowątkowość można zaimplementować na dwa sposoby: rozszerzając klasę Thread lub implementując interfejs Runnable. W obu przypadkach należy zdefiniować metodę run() zawierającą kod, który ma zostać wykonany w wątku. Wątek można uruchomić, wywołując metodę start() na obiekcie klasy Thread."
8,Co to jest Spring Boot i jakie są jego zalety?,"Spring Boot to framework oparty na Spring, który ułatwia tworzenie aplikacji opartych na Spring poprzez dostarczenie domyślnych konfiguracji i ustawień. Zalety Spring Boot obejmują szybki czas rozwoju, prostotę konfiguracji, wbudowane narzędzia do zarządzania aplikacją i wsparcie dla mikrousług."
9,Jakie są różnice między metodami HTTP GET i POST?,"GET to metoda HTTP używana do żądania danych z określonego zasobu. GET jest bezpieczne, idempotentne i można je łatwo przechwytywać. POST to metoda HTTP używana do przesyłania danych do serwera w celu utworzenia nowego zasobu. POST nie jest ani bezpieczne, ani idempotentne, ale może przesyłać większe ilości danych i jest mniej podatne na przechwytywanie."
10,W jaki sposób można zabezpieczyć aplikację opartą na Spring?,"Aplikację opartą na Spring można zabezpieczyć, korzystając z Spring Security - modułu dedykowanego do obsługi autentykacji, autoryzacji i ochrony przed atakami. Spring Security pozwala na konfigurację uwierzytelnienia opartego na formularzach, uwierzytelnianie z wykorzystaniem serwisów zewnętrznych (OAuth2, SSO) oraz definiowanie reguł dostępu do zasobów na podstawie ról użytkowników."
11,Jakie są różnice między równoczesnością a wielowątkowością?,"Równoczesność odnosi się do zdolności systemu do obsługi wielu zadań jednocześnie, ale niekoniecznie równocześnie. Wielowątkowość to szczególny przypadek równoczesności, w którym wiele zadań jest obsługiwanych przez wiele wątków w obrębie jednego procesu. Wielowątkowość umożliwia wykonywanie zadań równocześnie w przypadku systemów wieloprocesorowych."
12,Jakie są zalety stosowania Hibernate jako frameworka ORM?,"Hibernate to popularny framework ORM dla Javy, który ułatwia mapowanie obiektów na bazy danych relacyjne. Zalety Hibernate obejmują abstrakcję od konkretnego dialektu bazy danych, wydajność poprzez cacheowanie, ułatwienie implementacji warstwy dostępu do danych, wsparcie dla transakcji i łatwość integracji z innymi technologiami, takimi jak Spring."
13,W jaki sposób można zoptymalizować wydajność zapytań w bazie danych SQL?,"Oto kilka sposobów optymalizacji wydajności zapytań SQL:Korzystanie z indeksów, aby przyspieszyć operacje wyszukiwaniaUnikanie niepotrzebnych kartezjańskich iloczynów w zapytaniachOgraniczanie ilości przetwarzanych danych poprzez stosowanie klauzul WHERE i LIMITKorzystanie z zapytań opartych na JOIN, zamiast subzapytań, gdy to możliweStosowanie optymalizacji na poziomie bazy danych, takich jak cacheowanie wyników zapytań"
14,Jakie są podstawowe zasady architektury RESTful?,"Podstawowe zasady architektury RESTful obejmują:
Bezstanowość: Każde żądanie od klienta musi zawierać wszystkie informacje potrzebne do obsługi żądania. Serwer nie powinien przechowywać informacji o stanie między żądaniami.
Cacheowanie: Odpowiedzi serwera mogą być oznaczone jako możliwe do buforowania lub nie.
Klient-Serwer: Architektura opiera się na roli klienta i serwera, które komunikują się ze sobą poprzez protokół HTTP.
Jednolity interfejs: RESTful API powinno być konsekwentne i stosować się do konwencji dotyczących metod HTTP, ścieżek zasobów i formatów danych.
Warstwowy system: Architektura może być podzielona na warstwy, takie jak warstwa prezentacji, logiki biznesowej i dostępu do danych."
15, Jakie są różnice między podejściem synchronicznym a asynchronicznym w programowaniu?," W podejściu synchronicznym, wywołanie funkcji blokuje bieżący wątek i czeka na zakończenie operacji przed kontynuowaniem. W podejściu asynchronicznym, wywołanie funkcji pozwala na kontynuowanie działania bieżącego wątku, a wynik operacji jest przetwarzany później, np. poprzez callback, Promise lub async/await. Podejście asynchroniczne jest szczególnie przydatne w przypadku operacji o długim czasie wykonywania, takich jak I/O czy żądania sieciowe, które mogłyby zablokować wątek i utrudnić obsługę innych zadań."
16, Co to są media queries w CSS i jakie są ich zastosowania?,"Media queries to reguły CSS, które pozwalają na stosowanie różnych stylów w zależności od właściwości urządzenia, na którym wyświetlana jest strona (np. szerokości ekranu, rozdzielczości, orientacji). Media queries są używane głównie do tworzenia responsywnych stron internetowych, które dostosowują się do różnych rozmiarów ekranów i urządzeń."
17,Co to jest autoryzacja i autentykacja w kontekście zabezpieczania aplikacji?,"Autentykacja to proces weryfikacji tożsamości użytkownika na podstawie dostarczonych poświadczeń, takich jak nazwa użytkownika i hasło. Autoryzacja to proces określania, jakie zasoby i operacje są dostępne dla zautentykowanego użytkownika. Autoryzacja opiera się na rolach i uprawnieniach przypisanych użytkownikowi."
18,Jakie są podstawowe metody obsługiwane przez protokół HTTP?," Podstawowe metody obsługiwane przez protokół HTTP to:

GET: służy do żądania danych z określonego zasobu
POST: służy do przesyłania danych do serwera w celu utworzenia nowego zasobu
PUT: służy do aktualizacji istniejącego zasobu na serwerze
DELETE: służy do usuwania zasobu z serwera
PATCH: służy do częściowej aktualizacji istniejącego zasobu na serwerze"
19, Co to jest JSON i jak można go użyć w Javie?,"JSON (JavaScript Object Notation) to lekki format danych, który jest łatwy do czytania i generowania zarówno przez ludzi, jak i maszyny. JSON jest używany jako format wymiany danych między aplikacjami i serwisami internetowymi. W Javie, JSON można przetwarzać za pomocą bibliotek, takich jak Jackson, Gson czy java.json. Biblioteki te pozwalają na konwersję obiektów Java na JSON i odwrotnie, co ułatwia komunikację z serwisami opartymi na RESTful API."
20, Co to jest Docker i jakie są jego zalety?,"Docker to platforma, która pozwala na konteneryzację aplikacji, co oznacza, że aplikacje są uruchamiane w izolowanych środowiskach zwanych kontenerami. Kontenery zawierają wszystkie zależności i konfiguracje niezbędne do działania aplikacji. Zalety Dockera obejmują:
Ułatwienie zarządzania zależnościami i konfiguracją
Izolacja środowisk, co sprawia, że aplikacje są bardziej niezawodne i łatwe w utrzymaniu
Zwiększenie elastyczności i skalowalności, ponieważ kontenery można łatwo dodawać i usuwać
Przenośność między różnymi środowiskami (np. deweloperskim, testowym, produkcyjnym)"
21, Co to jest Agile i jakie są jego zalety?," Agile to podejście do zarządzania projektami, które opiera się na iteracyjnym i przyrostowym rozwoju. W Agile, praca jest podzielona na małe, zarządzalne części (iteracje), a zespół koncentruje się na dostarczaniu wartości dla klienta na bieżąco. Zalety Agile obejmują:
Szybsze dostarczanie wartości dla klienta
Elastyczność w dostosowywaniu się do zmian w wymaganiach i priorytetach
Wysoka jakość wynikająca z ciągłego testowania i refaktoryzacji
Wzmocnienie współpracy i komunikacji w zespole"
22,Jakie są różnice między klasami wewnętrznymi a zagnieżdżonymi statycznie w Javie?,"Klasy wewnętrzne to klasy zdefiniowane wewnątrz innej klasy. Klasy wewnętrzne mają dostęp do wszystkich członków klasy zewnętrznej, w tym do tych prywatnych. Klasy zagnieżdżone statycznie to klasy zdefiniowane wewnątrz innej klasy jako static. Klasy zagnieżdżone statycznie nie mają dostępu do członków instancji klasy zewnętrznej, ale mają dostęp do jej członków statycznych. Klasy zagnieżdżone statycznie są używane, gdy nie ma potrzeby tworzenia instancji klasy zewnętrznej."
23,Jakie są różnice między interfejsami a klasami abstrakcyjnymi w Javie?,"Interfejsy i klasy abstrakcyjne są obiema używanymi w Javie do tworzenia szablonów dla klas. Główne różnice między nimi to:
Interfejsy mogą zawierać tylko metody abstrakcyjne (bez implementacji) oraz stałe, podczas gdy klasy abstrakcyjne mogą zawierać metody abstrakcyjne, metody z implementacją, zmienne instancji i konstruktory.
Klasa może implementować wiele interfejsów, ale może dziedziczyć tylko po jednej klasie abstrakcyjnej.
W Javie 8 i nowszych, interfejsy mogą zawierać metody domyślne (z implementacją), ale nadal mają pewne ograniczenia w porównaniu z klasami abstrakcyjnymi.
Klasy abstrakcyjne są używane, gdy istnieje potrzeba współdzielenia implementacji między różnymi klasami, podczas gdy interfejsy są używane, gdy chcemy zdefiniować tylko kontrakt dla klas.
"
24,Jak działa mechanizm dziedziczenia w Javie?," Dziedziczenie to podstawowy mechanizm w programowaniu obiektowym, który pozwala na tworzenie nowych klas na podstawie istniejących klas poprzez rozszerzenie ich funkcjonalności. W Javie, dziedziczenie realizowane jest za pomocą słowa kluczowego ""extends"". Klasa dziedzicząca (podklasa) dziedziczy pola i metody klasy bazowej (superklasy) oraz może je modyfikować lub rozszerzać o dodatkowe funkcje. W przypadku przesłonięcia (override) metody, podklasa dostarcza własną implementację metody, zastępując implementację superklasy."
25, Jakie są różnice między przeciążaniem (overloading) a przesłanianiem (overriding) metod w Javie?,"Przeciążanie (overloading) metod polega na tworzeniu w obrębie jednej klasy wielu metod o tej samej nazwie, ale z różnymi sygnaturami (różne argumenty). Przesłanianie (overriding) metod polega na dostarczeniu przez podklasę własnej implementacji metody, która istnieje już w superklasie. Główne różnice między przeciążaniem a przesłanianiem metod to:

Przeciążanie metod występuje w obrębie jednej klasy, podczas gdy przesłanianie metod występuje między klasą bazową a klasą dziedziczącą.
W przypadku przeciążania metod, sygnatury metod musząsię różnić, podczas gdy w przypadku przesłaniania metod sygnatury muszą być identyczne.Przeciążanie metod jest związane z kompilacją (czas kompilacji), podczas gdy przesłanianie metod jest związane z wykonaniem (czas wykonania).
W przypadku przeciążania metod, metoda jest wybierana na podstawie typów argumentów przekazanych podczas wywołania metody, podczas gdy w przypadku przesłaniania metody, metoda jest wybierana na podstawie rzeczywistej klasy obiektu, na którym jest wywoływana."
26, Co to jest kapsułkowanie w programowaniu obiektowym i jak jest realizowane w Javie?,"Kapsułkowanie to mechanizm programowania obiektowego, który polega na ukrywaniu szczegółów implementacji obiektu oraz kontrolowaniu dostępu do jego stanu. W Javie, kapsułkowanie realizowane jest poprzez stosowanie modyfikatorów dostępu (public, private, protected) do pól i metod klasy. Aby osiągnąć kapsułkowanie, zwykle pola klasy są deklarowane jako private, co oznacza, że nie są dostępne poza klasą, a dostęp do tych pól jest udzielany poprzez publiczne metody dostępu (gettery i settery)."
27,Co to są wyjątki w Javie i jak można je obsługiwać?," Wyjątki to zdarzenia, które występują podczas działania programu i zakłócają normalny przepływ sterowania. Wyjątki w Javie są reprezentowane przez obiekty, które są instancjami klas dziedziczących po klasie Throwable. Obsługa wyjątków w Javie realizowana jest za pomocą bloków try-catch-finally. Kod, który może wywołać wyjątek, umieszczany jest w bloku try. Blok catch służy do przechwycenia i obsługi wyjątku, gdy wystąpi. Blok finally, który jest opcjonalny, zawiera kod, który zawsze zostanie wykonany, niezależnie od tego, czy wystąpi wyjątek, czy nie."
28, Co to jest wzorzec projektowy Singleton i jakie są jego zalety?," Wzorzec projektowy Singleton to wzorzec kreacyjny, który gwarantuje, że dana klasa ma tylko jedną instancję w całym programie, a dostęp do tej instancji jest globalny. Zalety wzorca Singleton obejmują:

Kontrola dostępu do zasobów współdzielonych
Oszczędność zasobów, ponieważ tylko jedna instancja klasy jest utworzona
Zapewnienie globalnego punktu dostępu do instancji klasy
Łatwość implementacji"
29,Co to jest wzorzec projektowy Factory i jakie są jego zalety?,"Wzorzec projektowy Factory to wzorzec kreacyjny, który pozwala na tworzenie obiektów bez konieczności ujawniania logiki tworzenia obiektów klientowi. Zamiast tego, klasa Factory zawiera metodę, która zwraca instancje obiektów na podstawie przekazanych parametrów. Zalety wzorca Factory obejmują:
Separacja logiki tworzenia obiektów od klienta, co upraszcza kod klienta
Elastyczność w tworzeniu różnych rodzajów obiektów, które implementują wspólny interfejs lub dziedziczą po wspólnej klasie bazowej
Ułatwienie dodawania nowych typów obiektów bez konieczności modyfikacji kodu klienta"
30,Co to jest wzorzec projektowy Observer i jakie są jego zalety?," Wzorzec projektowy Observer to wzorzec behawioralny, który definiuje zależność jeden-do-wielu między obiektami, tak aby gdy jeden obiekt zmienia swój stan, wszystkie zależne obiekty są powiadamiane i aktualizowane automatycznie. Zalety wzorca Observer obejmują:
Loosely coupling (luźne powiązanie) między obiektem obserwowanym a obiektami obserwującymi, co sprawia, że system jest bardziej modularny i łatwiejszy w utrzymaniu
Ułatwienie komunikacji między obiektami bez konieczności odwoływania się do nich bezpośrednio
Wspieranie dynamicznego dodawania i usuwania obserwatorów, co pozwala na zmiany w zależnościach między obiektami w czasie wykonywania programu"
31, Co to jest wzorzec projektowy Adapter i jakie są jego zalety?,"Wzorzec projektowy Adapter to wzorzec strukturalny, który pozwala na współpracę obiektów o niekompatybilnych interfejsach. Adapter jest klasą, która implementuje interfejs jednego z obiektów, a jednocześnie posiada referencję do innego obiektu o niekompatybilnym interfejsie. Adapter przekształca wywołania metod na interfejsie, który implementuje, na wywołania odpowiednich metod obiektu o niekompatybilnym interfejsie. Zalety wzorca Adapter obejmują:
Możliwość współpracy obiektów o różnych interfejsach bez konieczności modyfikacji ich kodu
Ułatwienie integracji systemów i komponentów, które nie zostały pierwotnie zaprojektowane do współpracy
Separacja logiki przekształcania interfejsów od klienta, co uprzyjaznia kod klienta i czyni go bardziej modularnym"
32,Co to jest wzorzec projektowy Decorator i jakie są jego zalety?," Wzorzec projektowy Decorator to wzorzec strukturalny, który pozwala na dynamiczne dodawanie nowej funkcjonalności do obiektu bez zmiany jego struktury. Decorator działa, tworząc obiekty, które opakowują obiekt dekorowany i implementują ten sam interfejs, a jednocześnie dodają lub zmieniają zachowanie obiektu. Zalety wzorca Decorator obejmują:        Dodawanie nowej funkcjonalności do obiektów w sposób dynamiczny i elastyczny, bez konieczności modyfikacji ich kodu
Możliwość łączenia różnych dekoratorów, aby stworzyć wiele kombinacji funkcjonalności
Alternatywa dla dziedziczenia, która pozwala na dodawanie funkcjonalności bez konieczności tworzenia nowych podklas"
33,Co to jest rekurencja i jak można jej użyć w Javie?,"Rekurencja to technika programowania, w której funkcja (metoda) wywołuje samą siebie, bezpośrednio lub pośrednio, w celu rozwiązania problemu. Rekurencja może być stosowana w Javie poprzez implementowanie metod rekurencyjnych. Przykładem rekurencyjnego problemu jest obliczanie silni liczby n (n!), gdzie n! = n * (n-1) * (n-2) * ... * 1.                            Ważne jest, aby zapewnić warunek zakończenia rekurencji, inaczej metoda będzie wywoływana nieskończenie wiele razy, co może prowadzić do przekroczenia limitu stosu i zgłoszenia wyjątku StackOverflowError."
34,Co to jest Spring Boot i jak ułatwia on tworzenie aplikacji opartych na Springu?,"Spring Boot to narzędzie ułatwiające tworzenie aplikacji Spring. Automatyzuje konfigurację, pozwala na tworzenie samodzielnych aplikacji i zawiera wiele predefiniowanych zależności."
